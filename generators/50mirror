#!/bin/sh
set -e

. /usr/share/debconf/confmodule
. /usr/lib/base-installer/library.sh

file="$1"

NL="
"

logoutput=""
if [ "$CATCHLOG" ]; then
	logoutput="log-output -t apt-setup"
fi

log() {
	logger -t apt-setup "$@"
}
warning() {
	log "warning: $@"
}

ask_no_mirror() {
	db_input critical apt-setup/no_mirror
	db_go || exit 10

	db_get apt-setup/no_mirror
	if [ "$RET" = true ]; then
		exit 1
	fi
}

# For architectures in the Debian-Ports archive, sources.list has to include
# an additional entry for the "unreleased" suite.
unset use_unreleased
if is_ports_architecture "$(chroot /target /usr/bin/dpkg --print-architecture)"; then
	log "Debian-Ports architecture detected"
	use_unreleased=yes
fi

# Ask if a mirror should be used if the base system can be installed from CD
# Default value and priority vary with the CD type used and number of CDs
# that has been scanned in 41cdset

# For now, we're not asking if a mirror is to be used, we're going to default the
# Ordissimo repositories.
# TODO: modify choose-mirror to only include Ordissimo mirrors and a manual setup.
if [ -e /cdrom/.disk/base_installable ]; then
	if ! search-path choose-mirror; then
		warning "choose-mirror is not available; cannot offer network mirror"
		exit 1
	fi

	#cd_type=unknown
	#if [ -e /cdrom/.disk/cd_type ]; then
	#	cd_type=$(cat /cdrom/.disk/cd_type)
	#fi
	#cd_count=$(grep "^deb cdrom:" $ROOT/etc/apt/sources.list.new | wc -l)

	no_network=
	if db_get netcfg/dhcp_options && \
	   [ "$RET" = "Do not configure the network at this time" ]; then
		no_network=1
		exit 1
	fi

	db_set apt-setup/use_mirror $use_mirror

	#db_input $use_prio apt-setup/use_mirror || [ $? -eq 30 ]
	#db_go || exit 10

	#db_get apt-setup/use_mirror
	#if [ "$RET" = false ]; then
	#	exit 1
	#fi

	# Default suite to codename; choose-mirror will determine actual suite
	#if db_get cdrom/codename && [ "$RET" ]; then
	#	db_set mirror/suite $RET
	#fi

	#while true; do
	#	CODE=0
	#	choose-mirror -n || CODE=$?	# no progress bar
	#	db_capb backup progresscancel
	#	if [ $CODE -eq 0 ]; then
	#		break
	#	elif [ $CODE -eq 10 ]; then
	#		# User backed out of choose-mirror
	#		ask_no_mirror
	#	else
	#		logger -t apt-setup "choose-mirror failed with error code $CODE"
	#		exit $CODE
	#	fi
	#done
fi


# Abort if no mirror is configured.
#db_get mirror/protocol
protocol="http"
#db_get mirror/codename
db_get debtarget-chooser/version
codename="$RET"
if [ "$codename" != "sr2007" ]; then
	# we can add a suffix
	# NOTE: the updates repo will be added later
	codename="${codename}-stable"
fi

#db_get mirror/$protocol/hostname
hostname="substantielwww.dyndns.org"
#db_get mirror/$protocol/directory
directory="/"
#if [ -z "$hostname" ] || [ -z "$directory" ]; then
#	exit 1
#fi

#db_get apt-setup/non-free
components="main non-free"

deb_src="deb-src"
db_get apt-setup/enable-source-repositories
if [ "$RET" = false ]; then
	deb_src="# deb-src"
fi

echo > $file
done=""
while [ ! "$done" ]; do
	#db_get mirror/codename
	#codename="$RET"
	#db_get mirror/protocol
	#protocol="$RET"
	#db_get mirror/$protocol/hostname
	#hostname="$RET"
	#db_get mirror/$protocol/directory
	#directory="/${RET#/}"

	if [ "$protocol" = "https" ]; then
		# Ensure that ca-certificates is installed, so apt can verify the https certificate
		$logoutput apt-install ca-certificates
	fi

	case $protocol in
	    http|https)
		db_get mirror/$protocol/proxy
		proxy="$RET"
		if [ -n "$proxy" ]; then
			if ! grep -iq "Acquire::$protocol::Proxy" $ROOT/etc/apt/apt.conf.new; then
				echo "Acquire::$protocol::Proxy \"$proxy\";" >> $ROOT/etc/apt/apt.conf.new
			fi
		fi
		;;
	esac

	trusted=""
	if [ -n "${use_unreleased}" -a "$hostname" = snapshot.debian.org ]; then
		# debian-ports' key does not last long, cannot use gpg :/
		trusted="[trusted=yes] "
	fi

	echo "deb $trusted$protocol://$hostname$directory $codename $components" >> $file
	if [ -n "${use_unreleased}" ]; then
		echo "deb $trusted$protocol://$hostname$directory unreleased main" >> $file
	fi

	if ! apt-setup-verify --from $PROGRESS_FROM --to $PROGRESS_TO $file; then
		db_set apt-setup/mirror/error Retry
		db_input critical apt-setup/mirror/error || true
		db_go || exit 10
		db_get apt-setup/mirror/error
		if [ "$RET" = "Change mirror" ]; then
			choose-mirror -n || true
			db_capb backup progresscancel
		elif [ "$RET" = Ignore ]; then
			exit 1
		fi
	fi

	echo "$deb_src $trusted$protocol://$hostname$directory $codename $components" >> $file

	case "$codename" in
		*-stable)
			if [ -f "/usr/lib/debtarget/versions/${codename%-stable}/.updates" ]; then
				codename="${codename%-stable}-updates"
				# do another round; this time with the updates repo
				done=
			else
				done=1
			fi
			# NOTE: if Ordissimo ever decides to add an updates
			#       repo to sr2018, this might break.
			if [ "$codename" = "sr2018-stable" ] && db_get debtarget-chooser/mode && [ "$RET" != "ordissimo" ]; then
				codename="stretch"
				hostname="archive.debian.org"
				directory="/debian"
				done=
			fi
			;;
		*-updates)
			case "${codename%-updates}" in
				sr2010)
					codename="squeeze"
					done=
					;;
				sr2014)
					codename="wheezy"
					done=
					;;
				*)
					done=1
					;;
			esac
			;;
		*)
			done=1
			;;
	esac

done

if [ -n "${use_unreleased}" ]; then
	echo "# 'unreleased' does not support sources yet" >> $file
	echo "# $deb_src $trusted$protocol://$hostname$directory unreleased main" >> $file
fi
# Remember components so that other generators don't have to grep:
echo $components > /tmp/apt-setup.components
